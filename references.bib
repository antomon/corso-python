@book{stone71,
  author = {Stone, Harold S.},
  title = {Introduction to Computer Organization and Data Structures},
  language = {English},
  year = {1971},
  isbn = {0070617260},
  publisher = {McGraw-Hill, Inc.},
  address = {USA},
  howpublished = "\url{https://dl.acm.org/doi/10.5555/578826}",
}
@techreport{kernighan1973b,
  title = {A Tutorial Introduction to the Programming Language B},
  author = {Kernighan, Brian W.},
  language = {English},
  year = {1973},
  institution = {Bell Laboratories},
  address = {Murray Hill, NJ}
}
@book{kernighan1988c,
  title={The C Programming Language},
  author={Kernighan, Brian W. and Ritchie, Dennis M.},
  language = {English},
  year={1988},
  publisher={Prentice Hall},
  address={Englewood Cliffs, NJ},
  edition={2nd},
  isbn={978-0131103627}
}
@book{stroustrup1997,
  author = {Stroustrup, Bjarne},
  title = {The C++ Programming Language},
  language = {English},
  year = {1997},
  edition = {3rd},
  publisher = {Addison-Wesley},
  address = {Reading, MA, USA},
  isbn = {978-0201889543}
}
@book{stroustrup2013,
  author = {Stroustrup, Bjarne},
  title = {The C++ Programming Language},
  language = {English},
  year = {2013},
  isbn = {0321563840},
  publisher = {Addison-Wesley Professional},
  edition = {4th},
  howpublished = "\url{https://dl.acm.org/doi/10.5555/2543987}",
  abstract = {Il libro "The C++ Programming Language" di Bjarne Stroustrup, inventore del C++, nella sua quarta edizione, è una risorsa imprescindibile per padroneggiare il linguaggio C++ nella sua versione C++11. Questa edizione aggiornata offre una trattazione completa del linguaggio, integrando sia le basi che le nuove funzionalità introdotte con C++11. Stroustrup fornisce una guida dettagliata e autorevole su come utilizzare le innovazioni del linguaggio per migliorare le prestazioni, la leggibilità e l'affidabilità del codice.\\
  \\
  Punti chiave del libro includono:\\
  \\
  - Trattazione Completa: Copertura approfondita di tutte le caratteristiche del linguaggio C++, dalle fondamenta alle novità del C++11.\\
  - Sintassi e Semantica: Descrizione dettagliata della struttura e dell'interpretazione del linguaggio.\\
  - Gestione della Memoria: Tecniche avanzate come smart pointers e move semantics.\\
  - Librerie Standard: Utilizzo efficace delle librerie C++.\\
  - Programmazione Generica: Uso dei template per codice riutilizzabile.\\
  - Multithreading: Strumenti per la programmazione concorrente.\\
  \\
  Considerato il testo di riferimento per eccellenza, questa ultima edizione è essenziale per qualsiasi programmatore C++ che voglia sfruttare appieno le potenzialità del linguaggio.}
  }
@misc{wikipedia_languages_eng,
  author = {{Wikipedia contrib.}},
  title = {List of programming languages},
  language = {English},
  year = {2024},
  url = {https://en.wikipedia.org/wiki/List_of_programming_languages},
  accessed = {2024-07-09}
}
@book{polya1945,
  author = {Polya, George},
  language = {English},
  title = {How to Solve It},
  year = {1945},
  publisher = {Princeton University Press},
  isbn = {9780691119663}
}
@book{erickson2019,
  author = {Erickson, Jeff},
  title = {Algorithms},
  year = {2019},
  publisher = {Independent},
  note = {\url{https://jeffe.cs.illinois.edu/teaching/algorithms/}},
  url = {https://www.amazon.it/Algorithms-Jeff-Erickson/dp/1792644833}
}
@article{church1936,
  author = {Church, Alonzo},
  title = {An Unsolvable Problem of Elementary Number Theory},
  journal = {American Journal of Mathematics},
  volume = {58},
  number = {2},
  pages = {345-363},
  year = {1936},
  doi = {10.2307/2371045},
  url = {https://www.jstor.org/stable/2371045}
}
@misc{wikipedia_lambda_calculus,
  author = {{Wikipedia contrib.}},
  title = {Lambda calculus},
  year = {2024},
  url = {https://en.wikipedia.org/wiki/Lambda_calculus},
  note = {Accessed: 2024-07-09}
}
@misc{wikipedia_map,
  author = {{Wikipedia contrib.}},
  title = {Map (higher-order function)},
  year = {2024},
  url = {https://en.wikipedia.org/wiki/Map_(higher-order_function)},
  note = {Accessed: 2024-07-09}
}
@misc{wikipedia_filter,
  author = {{Wikipedia contrib.}},
  title = {Filter (higher-order function)},
  year = {2024},
  url = {https://en.wikipedia.org/wiki/Filter_(higher-order_function)},
  note = {Accessed: 2024-07-09}
}
@misc{wikipedia_reduce,
  author = {{Wikipedia contrib.}},
  title = {Reduce (higher-order function)},
  year = {2024},
  url = {https://en.wikipedia.org/wiki/Reduce_(higher-order_function)},
  note = {Accessed: 2024-07-09}
}
@book{abelson1996,
  author = {Abelson, Harold and Jay Sussman, Gerald},
  title = {Structure and Interpretation of Computer Programs},
  year = {1996},
  edition = {2nd},
  publisher = {MIT Press},
  isbn = {978-0262510875}
}
@book{curry1950,
  author = {Curry, Haskell B.},
  title = {A Theory of Formal Deducibility},
  series = {Notre Dame Mathematical Lectures},
  number = {6},
  year = {1950},
  publisher = {University of Notre Dame Press}
}
@misc{haskell_currying,
  author = {{Haskell wiki contrib.}},
  title = {Currying},
  year = {2024},
  url = {https://wiki.haskell.org/Currying},
  note = {Accessed: 2024-07-09}
}
@misc{wikipedia_currying,
  author = {{Wikipedia contrib.}},
  title = {Currying},
  year = {2024},
  url = {https://en.wikipedia.org/wiki/Currying},
  note = {Accessed: 2024-07-09}
}
@article{hoare1969,
  author = {Hoare, Charles A. R.},
  title = {An Axiomatic Basis for Computer Programming},
  journal = {Communications of the ACM},
  volume = {12},
  number = {10},
  year = {1969},
  pages = {576--580},
  publisher = {ACM},
  doi = {10.1145/363235.363259},
  url = {https://dl.acm.org/doi/10.1145/363235.363259}
}
@book{pierce2014,
  author = {Pierce, Benjamin C. et al.},
  title = {Software Foundations},
  year = {2014},
  publisher = {University of Pennsylvania},
  note = {\url{https://softwarefoundations.cis.upenn.edu/}}
}
@book{chlipala2022,
  author = {Chlipala, Adam},
  title = {Certified Programming with Dependent Types},
  year = {2022},
  publisher = {MIT Press},
  isbn = {9780262545747},
  abstract = {Il libro "Certified Programming with Dependent Types" di Adam Chlipala offre un'introduzione dettagliata al software Coq per la scrittura e la verifica di dimostrazioni matematiche, con un forte focus pratico sull'ingegneria del software. La verifica formale dei programmi è un campo in crescita che trova applicazione sia nella matematica che nell'ingegneria, e questo libro si propone di rendere accessibili le tecniche per costruire, comprendere e mantenere sviluppi in Coq di grandi dimensioni. Una delle caratteristiche distintive del libro è la trattazione approfondita della programmazione con tipi dipendenti, un aspetto centrale del sistema Coq, e la costruzione di tattiche di prova specifiche per il dominio. Questi argomenti, raramente trattati altrove, sono essenziali per la verifica interattiva dei teoremi. Il libro utilizza uno stile unico di prova automatizzata e offre una libreria di tattiche progettate per essere utilizzate con gli esempi del testo, fornendo ai lettori le competenze necessarie per reimplementare queste tattiche in altri contesti.},
  note = {\url{http://adam.chlipala.net/cpdt/html/}}
}
@misc{wikipedia_bubble_sort,
  author = {{Wikipedia contrib.}},
  title = {Bubble sort},
  year = {2024},
  url = {https://en.wikipedia.org/wiki/Bubble_sort},
  note = {Accessed: 2024-07-09}
}