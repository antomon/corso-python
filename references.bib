@book{stone71,
  author = {Stone, Harold S.},
  title = {Introduction to Computer Organization and Data Structures},
  language = {English},
  year = {1971},
  isbn = {0070617260},
  publisher = {McGraw-Hill, Inc.},
  address = {USA},
  howpublished = "\url{https://dl.acm.org/doi/10.5555/578826}",
}
@techreport{kernighan1973b,
  title = {A Tutorial Introduction to the Programming Language B},
  author = {Kernighan, Brian W.},
  language = {English},
  year = {1973},
  institution = {Bell Laboratories},
  address = {Murray Hill, NJ}
}
@book{kernighan1988c,
  title={The C Programming Language},
  author={Kernighan, Brian W. and Ritchie, Dennis M.},
  language = {English},
  year={1988},
  publisher={Prentice Hall},
  address={Englewood Cliffs, NJ},
  edition={2nd},
  isbn={978-0131103627}
}
@book{stroustrup1997,
  author = {Bjarne Stroustrup},
  title = {The C++ Programming Language},
  language = {English},
  year = {1997},
  edition = {3rd},
  publisher = {Addison-Wesley},
  address = {Reading, MA, USA},
  isbn = {978-0201889543}
}
@book{stroustrup2013,
  author = {Stroustrup, Bjarne},
  title = {The C++ Programming Language},
  language = {English},
  year = {2013},
  isbn = {0321563840},
  publisher = {Addison-Wesley Professional},
  edition = {4th},
  howpublished = "\url{https://dl.acm.org/doi/10.5555/2543987}",
  abstract = {C++11 has arrived: thoroughly master it, with the definitive new guide from C++ creator Bjarne Stroustrup, C++ Programming Language, Fourth Edition! The brand-new edition of the world's most trusted and widely read guide to C++, it has been comprehensively updated for the long-awaited C++11 standard. Extensively rewritten to present the C++11 language, standard library, and key design techniques as an integrated whole, Stroustrup thoroughly addresses changes that make C++11 feel like a whole new language, offering definitive guidance for leveraging its improvements in performance, reliability, and clarity. C++ programmers around the world recognize Bjarne Stoustrup as the go-to expert for the absolutely authoritative and exceptionally useful information they need to write outstanding C++ programs. Now, as C++11 compilers arrive and development organizations migrate to the new standard, they know exactly where to turn once more: Stoustrup's C++ Programming Language, Fourth Edition.}
  }
@misc{wikipedia_languages_eng,
  author = {{Wikipedia 'List of programming languages' page contributors}},
  title = {List of programming languages},
  language = {English},
  year = {2024},
  url = {https://en.wikipedia.org/wiki/List_of_programming_languages},
  accessed = {2024-07-09}
}
@book{polya1945,
  author = {Polya, George},
  language = {English},
  title = {How to Solve It},
  year = {1945},
  publisher = {Princeton University Press},
  isbn = {9780691119663}
}
@book{erickson2019,
  author = {Erickson, Jeff},
  title = {Algorithms},
  year = {2019},
  publisher = {Independent},
  note = {\url{https://jeffe.cs.illinois.edu/teaching/algorithms/}},
  url = {https://www.amazon.it/Algorithms-Jeff-Erickson/dp/1792644833}
}
@article{church1936,
  author = {Church, Alonzo},
  title = {An Unsolvable Problem of Elementary Number Theory},
  journal = {American Journal of Mathematics},
  volume = {58},
  number = {2},
  pages = {345-363},
  year = {1936},
  doi = {10.2307/2371045},
  url = {https://www.jstor.org/stable/2371045}
}
@misc{wikipedia_lambda_calculus,
  author = {{Wikipedia 'Lambda calculus' page contributors}},
  title = {Lambda calculus},
  year = {2024},
  url = {https://en.wikipedia.org/wiki/Lambda_calculus},
  note = {Accessed: 2024-07-09}
}
@misc{wikipedia_map,
  author = {{Wikipedia 'Map (higher-order function)' page contributors}},
  title = {Map (higher-order function)},
  year = {2024},
  url = {https://en.wikipedia.org/wiki/Map_(higher-order_function)},
  note = {Accessed: 2024-07-09}
}
@misc{wikipedia_filter,
  author = {{Wikipedia 'Filter (higher-order function)' page contributors}},
  title = {Filter (higher-order function)},
  year = {2024},
  url = {https://en.wikipedia.org/wiki/Filter_(higher-order_function)},
  note = {Accessed: 2024-07-09}
}
@misc{wikipedia_reduce,
  author = {{Wikipedia 'Reduce (higher-order function)' page contributors}},
  title = {Reduce (higher-order function)},
  year = {2024},
  url = {https://en.wikipedia.org/wiki/Reduce_(higher-order_function)},
  note = {Accessed: 2024-07-09}
}
@book{abelson1996,
  author = {Abelson, Harold and Jay Sussman, Gerald},
  title = {Structure and Interpretation of Computer Programs},
  year = {1996},
  edition = {2nd},
  publisher = {MIT Press},
  isbn = {978-0262510875}
}
@book{curry1950,
  author = {Curry, Haskell B.},
  title = {A Theory of Formal Deducibility},
  series = {Notre Dame Mathematical Lectures},
  number = {6},
  year = {1950},
  publisher = {University of Notre Dame Press}
}
@misc{haskell_currying,
  author = {{Haskell wiki 'Currying' page contributors}},
  title = {Currying},
  year = {2024},
  url = {https://wiki.haskell.org/Currying},
  note = {Accessed: 2024-07-09}
}
@misc{wikipedia_currying,
  author = {{Wikipedia 'Currying' page contributors}},
  title = {Currying},
  year = {2024},
  url = {https://en.wikipedia.org/wiki/Currying},
  note = {Accessed: 2024-07-09}
}
@article{hoare1969,
  author    = {Hoare, C. A. R.},
  title     = {An Axiomatic Basis for Computer Programming},
  journal   = {Communications of the ACM},
  volume    = {12},
  number    = {10},
  year      = {1969},
  pages     = {576--580},
  publisher = {ACM},
  doi       = {10.1145/363235.363259},
  url       = {https://dl.acm.org/doi/10.1145/363235.363259}
}
@book{pierce2014,
  author    = {Benjamin C. Pierce et al.},
  title     = {Software Foundations},
  year      = {2014},
  publisher = {University of Pennsylvania},
  note      = {\url{https://softwarefoundations.cis.upenn.edu/}}
}
@book{chlipala2022,
  author = {Chlipala, Adam},
  title = {Certified Programming with Dependent Types},
  year = {2022},
  publisher = {MIT Press},
  isbn = {9780262545747},
  abstract = {Il libro "Certified Programming with Dependent Types" di Adam Chlipala offre un'introduzione dettagliata al software Coq per la scrittura e la verifica di dimostrazioni matematiche, con un forte focus pratico sull'ingegneria del software. La verifica formale dei programmi è un campo in crescita che trova applicazione sia nella matematica che nell'ingegneria, e questo libro si propone di rendere accessibili le tecniche per costruire, comprendere e mantenere sviluppi in Coq di grandi dimensioni. Una delle caratteristiche distintive del libro è la trattazione approfondita della programmazione con tipi dipendenti, un aspetto centrale del sistema Coq, e la costruzione di tattiche di prova specifiche per il dominio. Questi argomenti, raramente trattati altrove, sono essenziali per la verifica interattiva dei teoremi. Il libro utilizza uno stile unico di prova automatizzata e offre una libreria di tattiche progettate per essere utilizzate con gli esempi del testo, fornendo ai lettori le competenze necessarie per reimplementare queste tattiche in altri contesti.},
  note = {\url{http://adam.chlipala.net/cpdt/html/}}
}
